#!/bin/bash

################################################################################
#
# war-tag - A little tool to get/set custom tags in a WAR file.
#
# Copyright (c) 2014-8 Roberto Reale
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
################################################################################


################################################################################
#
# war-tag
#
# Purpose:
#
#   get/set custom tags in WAR files
#
# Environment variables:
#
#   none
#
# Example of call:
#
#   war-tag --get-tag <TAG> <FILE>
#   war-tag --set-tag <TAG> <VALUE> <FILE>
#
################################################################################


#
# Bashlets library modules/plugins
################################################################################

source bashlets core/shell/myself
source bashlets util/filetype/zip


#
# global variables
################################################################################

# script version
WARTAG_VERSION='0.1'


#
# utilities
################################################################################

#
# wartag_get_tag
#
#
# Purpose:
#
#   get tag value from a WAR file
#
# Example of call:
#
#   wartag_get_tag <file> <tag>
#
# Local variables:
#
#   file, tag
#

function wartag_get_tag()
{
    local file="$1" tag="$2"

    (bash$$ zip get_comment_by_key "$file" "$tag")
}


#
# wartag_set_tag
#
#
# Purpose:
#
#   set tag value in a WAR file
#
# Example of call:
#
#   wartag_set_tag <file> <tag> <value>
#
# Local variables:
#
#   file, tag, value
#

function wartag_set_tag()
{
    local file="$1" tag="$2" value="$3"

    (bash$$ zip set_comment_by_key "$file" "$tag" "$value")
}


#
# wartag_check_file
#
#
# Purpose:
#
#   check for WAR file existence (and sanity, TODO)
#
# Example of call:
#
#   wartag_check_file <file>
#
# Local variables:
#
#   NONE
#

function wartag_check_file()
{
    [[ -f $1 ]]
}


#
# wartag_usage
#
#
# Purpose:
#
#    prints usage information
#
# Example of call:
#
#    wartag_usage
#
# Local variables:
#
#    NONE
#

function wartag_usage()
{
    echo "Get/set custom tags in a WAR file.  Usage:"
    echo "    $(bash$$ myself name) --get-tag <TAG> <FILE>"
    echo "    $(bash$$ myself name) --set-tag <TAG> <VALUE> <FILE>"
}


#
# main loop
################################################################################

if [ $# -lt 3 ]
then
    wartag_usage
    exit 1
fi


if [ "$1" == "--get-tag" ]
then
    wartag_check_file "$3" || { echo "ERROR on WAR file!" ; exit 1 ; }
    wartag_get_tag "$3" "$2"
    exit 0

elif [ "$1" == "--set-tag" ]
then
    if [ $# -lt 4 ]; then
        wartag_usage
        exit 1
    fi
    wartag_check_file "$4" || { echo "ERROR on WAR file!" ; exit 1 ; }
    wartag_set_tag "$4" "$2" "$3"
    exit 0
fi


wartag_usage
exit 1

# ex: ts=4 sw=4 et filetype=sh
